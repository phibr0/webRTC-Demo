import{S as D,i as N,s as E,e as C,c as b,a as k,d as u,b as y,f as h,n as m,o as j,p as g,u as J,m as L,J as I,K as M,v as $,w as S,x as w,A,t as O,j as P,g as R,l as U,H as q,I as d}from"../chunks/vendor-efad3a29.js";import{C as x,S as H}from"../chunks/scanner-557f655c.js";/* empty css                                                   */function K(i){let n,t;return n=new x({props:{channel:i[0]}}),{c(){$(n.$$.fragment)},l(e){S(n.$$.fragment,e)},m(e,s){w(n,e,s),t=!0},p(e,s){const o={};s&1&&(o.channel=e[0]),n.$set(o)},i(e){t||(g(n.$$.fragment,e),t=!0)},o(e){m(n.$$.fragment,e),t=!1},d(e){A(n,e)}}}function T(i){let n,t,e,s;return{c(){n=C("p"),t=O("Let the other User scan this Code"),e=P(),s=C("canvas"),this.h()},l(o){n=b(o,"P",{class:!0});var c=k(n);t=R(c,"Let the other User scan this Code"),c.forEach(u),e=U(o),s=b(o,"CANVAS",{class:!0}),k(s).forEach(u),this.h()},h(){y(n,"class","svelte-uhetc"),y(s,"class","svelte-uhetc")},m(o,c){h(o,n,c),q(n,t),h(o,e,c),h(o,s,c),i[3](s)},p:d,i:d,o:d,d(o){o&&u(n),o&&u(e),o&&u(s),i[3](null)}}}function V(i){let n,t;return n=new H({}),{c(){$(n.$$.fragment)},l(e){S(n.$$.fragment,e)},m(e,s){w(n,e,s),t=!0},p:d,i(e){t||(g(n.$$.fragment,e),t=!0)},o(e){m(n.$$.fragment,e),t=!1},d(e){A(n,e)}}}function z(i){let n,t,e,s;const o=[V,T,K],c=[];function f(a,r){return a[2]==="scanning"?0:a[2]==="offering"?1:a[2]==="chatting"?2:-1}return~(t=f(i))&&(e=c[t]=o[t](i)),{c(){n=C("main"),e&&e.c(),this.h()},l(a){n=b(a,"MAIN",{class:!0});var r=k(n);e&&e.l(r),r.forEach(u),this.h()},h(){y(n,"class","svelte-uhetc")},m(a,r){h(a,n,r),~t&&c[t].m(n,null),s=!0},p(a,[r]){let l=t;t=f(a),t===l?~t&&c[t].p(a,r):(e&&(L(),m(c[l],1,1,()=>{c[l]=null}),j()),~t?(e=c[t],e?e.p(a,r):(e=c[t]=o[t](a),e.c()),g(e,1),e.m(n,null)):e=null)},i(a){s||(g(e),s=!0)},o(a){m(e),s=!1},d(a){a&&u(n),~t&&c[t].d()}}}function B(i,n,t){let e,s,o="scanning";J(()=>{addEventListener("scan",async f=>{t(2,o="offering");const a=f.detail.sdp,r={};r.iceServers=[],r.iceServers.push({urls:"stun:stun1.l.google.com:19302"});const l=new RTCPeerConnection(r);l.onicecandidate=_=>{console.log("New ICE Candidate, reprinting SDP:"),console.log(JSON.stringify(l.localDescription)),I.toCanvas(s,JSON.stringify(l.localDescription),console.error)},l.ondatachannel=_=>{const p=_.channel;p.onmessage=v=>console.log("Message received: "+v.data),p.onopen=v=>{console.log("Connection opened."),t(2,o="chatting")},p.onclose=v=>console.log("Connection closed."),t(0,e=p)},l.setRemoteDescription(a),await l.createAnswer().then(_=>l.setLocalDescription(_)).then(_=>console.log(JSON.stringify(l.localDescription)))})});function c(f){M[f?"unshift":"push"](()=>{s=f,t(1,s)})}return[e,s,o,c]}class W extends D{constructor(n){super();N(this,n,B,z,E,{})}}export{W as default};
