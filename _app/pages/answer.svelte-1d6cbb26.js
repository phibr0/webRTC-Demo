import{S as A,i as L,s as E,e as C,c as b,a as w,d as u,b as k,f as h,n as m,o as N,p as d,u as j,m as q,J as z,K as I,v as y,w as $,x as S,A as D,t as J,j as M,g as P,l as R,H as O,I as g}from"../chunks/vendor-efad3a29.js";import{C as T,S as U}from"../chunks/scanner-64a81939.js";/* empty css                                                   */function x(i){let n,t;return n=new T({props:{channel:i[0]}}),{c(){y(n.$$.fragment)},l(e){$(n.$$.fragment,e)},m(e,s){S(n,e,s),t=!0},p(e,s){const o={};s&1&&(o.channel=e[0]),n.$set(o)},i(e){t||(d(n.$$.fragment,e),t=!0)},o(e){m(n.$$.fragment,e),t=!1},d(e){D(n,e)}}}function H(i){let n,t,e,s;return{c(){n=C("p"),t=J("Let the other User scan this Code"),e=M(),s=C("canvas"),this.h()},l(o){n=b(o,"P",{class:!0});var r=w(n);t=P(r,"Let the other User scan this Code"),r.forEach(u),e=R(o),s=b(o,"CANVAS",{class:!0}),w(s).forEach(u),this.h()},h(){k(n,"class","svelte-1q7w9mz"),k(s,"class","svelte-1q7w9mz")},m(o,r){h(o,n,r),O(n,t),h(o,e,r),h(o,s,r),i[3](s)},p:g,i:g,o:g,d(o){o&&u(n),o&&u(e),o&&u(s),i[3](null)}}}function K(i){let n,t;return n=new U({props:{type:"answer"}}),{c(){y(n.$$.fragment)},l(e){$(n.$$.fragment,e)},m(e,s){S(n,e,s),t=!0},p:g,i(e){t||(d(n.$$.fragment,e),t=!0)},o(e){m(n.$$.fragment,e),t=!1},d(e){D(n,e)}}}function V(i){let n,t,e,s;const o=[K,H,x],r=[];function f(a,c){return a[2]==="scanning"?0:a[2]==="offering"?1:a[2]==="chatting"?2:-1}return~(t=f(i))&&(e=r[t]=o[t](i)),{c(){n=C("main"),e&&e.c(),this.h()},l(a){n=b(a,"MAIN",{class:!0});var c=w(n);e&&e.l(c),c.forEach(u),this.h()},h(){k(n,"class","svelte-1q7w9mz")},m(a,c){h(a,n,c),~t&&r[t].m(n,null),s=!0},p(a,[c]){let l=t;t=f(a),t===l?~t&&r[t].p(a,c):(e&&(q(),m(r[l],1,1,()=>{r[l]=null}),N()),~t?(e=r[t],e?e.p(a,c):(e=r[t]=o[t](a),e.c()),d(e,1),e.m(n,null)):e=null)},i(a){s||(d(e),s=!0)},o(a){m(e),s=!1},d(a){a&&u(n),~t&&r[t].d()}}}function B(i,n,t){let e,s,o="scanning";j(()=>{addEventListener("scan",async f=>{t(2,o="offering");const a=f.detail.sdp,c={};c.iceServers=[],c.iceServers.push({urls:"stun:stun1.l.google.com:19302"});const l=new RTCPeerConnection(c);l.onicecandidate=p=>{console.log("New ICE Candidate, reprinting SDP:"),console.log(JSON.stringify(l.localDescription)),z.toCanvas(s,l.localDescription.sdp,{errorCorrectionLevel:"L",margin:2},console.error)},l.ondatachannel=p=>{const _=p.channel;_.onmessage=v=>console.log("Message received: "+v.data),_.onopen=v=>{console.log("Connection opened."),t(2,o="chatting")},_.onclose=v=>{console.log("Connection closed."),location.href="https://phibr0.de/webRTC-Demo"},t(0,e=_)},l.setRemoteDescription(a),await l.createAnswer().then(p=>l.setLocalDescription(p)).then(p=>console.log(JSON.stringify(l.localDescription)))})});function r(f){I[f?"unshift":"push"](()=>{s=f,t(1,s)})}return[e,s,o,r]}class W extends A{constructor(n){super();L(this,n,B,V,E,{})}}export{W as default};
